import React, { useEffect, useState, useContext } from "react";
import TheTitle from "components/atoms/theTitle";
import useFetch from "hooks/useFetch";
import AlertMessage from "components/atoms/alertMessage";
import { Navigate } from "react-router-dom";
import useLocalStorage from "hooks/useLocalStorage";
import { CurrentUserContext } from "contexts/currentUser";

const Authentification = () => {
  const isLogout = location.pathname === "/logout";
  const isLogin = location.pathname === "/login";
  const pageTitle = isLogin ? "Login" : "Register";
  const actionUrl = isLogin ? "/auth" : "/users";
  const apiUrl = isLogin ? "/auth" : "/users";
  const [{ response, isLoading, error }, doFetch] = useFetch(apiUrl);

  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [name, setName] = useState("");
  const [extra_details, setExtra_details] = useState("");
  const [skills, setSkills] = useState("");
  const [profession, setProfession] = useState("");
  const [details, setDetails] = useState("");
  const [isSuccessfullSubmit, setisSuccessfullSubmit] = useState(false);
  const [token, setToken] = useLocalStorage("token");
  const [, setCurrentUserState] = useContext(CurrentUserContext);

  /*
   * Handle form submit
   * Send data to API
   * */
  const handleSubmit = (event) => {
    event.preventDefault();
    const data = isLogin
      ? { email, password }
      : { email, password, name, extra_details, skills, profession, details };
    doFetch({
      method: "post",
      data,
    });
  };

  /*
   * Catch API response
   * Set flag about successfully submitting
   * Save token into local storrage
   * */
  useEffect(() => {
    if (!response) {
      setisSuccessfullSubmit(false);
      if (isLogout) {
        setCurrentUserState(() => ({
          isLoading: false,
          isLoggedIn: null,
          currentUser: null,
        }));
        localStorage.removeItem("token");
      }
      return;
    }

    setisSuccessfullSubmit(true);

    if (response.token) {
      setToken(response.token);
      localStorage.setItem("token", response.token);
      setCurrentUserState((state) => ({
        ...state,
        isLoading: false,
        isLoggedIn: true,
        currentUser: response.token,
      }));
    }
  }, [response, setToken, setCurrentUserState]);

  if (isLogout) {
    return <Navigate to="/" />;
  }

  /*
   * Redirect to login page from redirection
   * Redirection to home page from login if token was set
   * */
  if (isSuccessfullSubmit && !error) {
    if (token) {
      return <Navigate to="/" />;
    }
    if (!isLogin) {
      return <Navigate to="/login" />;
    }
  }

  return (
    <main className="px-4 py-5 container authentification">
      <TheTitle name={pageTitle} />
      <form action={actionUrl} onSubmit={handleSubmit} className="row g-3">
        {!!error && <AlertMessage error={error} />}
        <fieldset>
          <div className="mb-12">
            <label htmlFor="email" className="form-label">
              Email
            </label>
            <input
              required="required"
              type="email"
              className="form-control"
              id="email"
              placeholder="Email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
            />
          </div>
        </fieldset>
        <fieldset>
          <div className="mb-12">
            <label htmlFor="password" className="form-label">
              Password
            </label>
            <input
              required="required"
              type="password"
              className="form-control"
              id="password"
              placeholder="Password"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
            />
          </div>
        </fieldset>
        {!isLogin && (
          <>
            <fieldset>
              <div className="mb-12">
                <label htmlFor="name" className="form-label">
                  Name
                </label>
                <input
                  type="text"
                  className="form-control"
                  id="name"
                  placeholder="Name"
                  value={name}
                  onChange={(e) => setName(e.target.value)}
                />
              </div>
            </fieldset>
            <fieldset>
              <div className="mb-12">
                <label htmlFor="extra_details" className="form-label">
                  Extra details
                </label>
                <input
                  type="text"
                  className="form-control"
                  id="extra_details"
                  placeholder="Extra details"
                  value={extra_details}
                  onChange={(e) => setExtra_details(e.target.value)}
                />
              </div>
            </fieldset>
            <fieldset>
              <div className="mb-12">
                <label htmlFor="skills" className="form-label">
                  Skills
                </label>
                <input
                  type="text"
                  className="form-control"
                  id="skills"
                  placeholder="Skills"
                  value={skills}
                  onChange={(e) => setSkills(e.target.value)}
                />
              </div>
            </fieldset>
            <fieldset>
              <div className="mb-12">
                <label htmlFor="profession" className="form-label">
                  Profession
                </label>
                <input
                  type="text"
                  className="form-control"
                  id="profession"
                  placeholder="Profession"
                  value={profession}
                  onChange={(e) => setProfession(e.target.value)}
                />
              </div>
            </fieldset>
            <fieldset>
              <div className="mb-12">
                <label htmlFor="details" className="form-label">
                  Details
                </label>
                <input
                  type="text"
                  className="form-control"
                  id="details"
                  placeholder="Details"
                  value={details}
                  onChange={(e) => setDetails(e.target.value)}
                />
              </div>
            </fieldset>
          </>
        )}
        <fieldset className="d-grid gap-2">
          <button className="btn btn-primary" type="submit">
            {pageTitle}
          </button>
        </fieldset>
      </form>
    </main>
  );
};

export default Authentification;
