/*
 * TO DO: EVERYTHING
 * */

import React, { useContext, useState } from "react";
import TheTitle from "components/atoms/theTitle";
import AlertMessage from "components/atoms/alertMessage";
import useLocalStorage from "hooks/useLocalStorage";
import { CurrentUserContext } from "contexts/currentUser";
import useFetch from "hooks/useFetch";

const PersonalData = () => {
  const [currentUserState] = useContext(CurrentUserContext);
  const [email, setEmail] = useState(currentUserState.email);
  const [password, setPassword] = useState(currentUserState.password);
  const [name, setName] = useState(currentUserState.name);
  const [extra_details, setExtra_details] = useState(
    currentUserState.extra_details
  );
  const [skills, setSkills] = useState(currentUserState.skills);
  const [profession, setProfession] = useState(currentUserState.profession);
  const [details, setDetails] = useState(currentUserState.details);
  const [isSuccessfullSubmit, setisSuccessfullSubmit] = useState(false);
  const [token, setToken] = useLocalStorage("token");
  const [, setCurrentUserState] = useContext(CurrentUserContext);

  const [{ response, isLoading, error }, doFetch] = useFetch("user");
  /*
   * Handle form submit
   * Send data to API
   * */
  const handleSubmit = (event) => {
    event.preventDefault();
    const data = {
      email,
      password,
      name,
      extra_details,
      skills,
      profession,
      details,
    };
    doFetch({
      method: "post",
      data,
    });
  };

  return (
    <main className="px-4 py-5 container authentification">
      <TheTitle name="Personal data" />
      <form action="personal-data" onSubmit={handleSubmit} className="row g-3">
        {!!error && <AlertMessage error={error} />}
        <fieldset>
          <div className="mb-12">
            <label htmlFor="email" className="form-label">
              Email
            </label>
            <input
              required="required"
              type="email"
              className="form-control"
              id="email"
              placeholder="Email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
            />
          </div>
        </fieldset>
        <fieldset>
          <div className="mb-12">
            <label htmlFor="password" className="form-label">
              Password
            </label>
            <input
              required="required"
              type="password"
              className="form-control"
              id="password"
              placeholder="Password"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
            />
          </div>
        </fieldset>
        <fieldset>
          <div className="mb-12">
            <label htmlFor="name" className="form-label">
              Name
            </label>
            <input
              type="text"
              className="form-control"
              id="name"
              placeholder="Name"
              value={name}
              onChange={(e) => setName(e.target.value)}
            />
          </div>
        </fieldset>
        <fieldset>
          <div className="mb-12">
            <label htmlFor="extra_details" className="form-label">
              Extra details
            </label>
            <input
              type="text"
              className="form-control"
              id="extra_details"
              placeholder="Extra details"
              value={extra_details}
              onChange={(e) => setExtra_details(e.target.value)}
            />
          </div>
        </fieldset>
        <fieldset>
          <div className="mb-12">
            <label htmlFor="skills" className="form-label">
              Skills
            </label>
            <input
              type="text"
              className="form-control"
              id="skills"
              placeholder="Skills"
              value={skills}
              onChange={(e) => setSkills(e.target.value)}
            />
          </div>
        </fieldset>
        <fieldset>
          <div className="mb-12">
            <label htmlFor="profession" className="form-label">
              Profession
            </label>
            <input
              type="text"
              className="form-control"
              id="profession"
              placeholder="Profession"
              value={profession}
              onChange={(e) => setProfession(e.target.value)}
            />
          </div>
        </fieldset>
        <fieldset>
          <div className="mb-12">
            <label htmlFor="details" className="form-label">
              Details
            </label>
            <input
              type="text"
              className="form-control"
              id="details"
              placeholder="Details"
              value={details}
              onChange={(e) => setDetails(e.target.value)}
            />
          </div>
        </fieldset>
        <fieldset className="d-grid gap-2">
          <button className="btn btn-primary" type="submit">
            Update
          </button>
        </fieldset>
      </form>
    </main>
  );
};

export default PersonalData;
